stages:
 - build
 - test
 - quality
 - deploy

.build_template_make: &build_definition_make
  stage: build
  before_script:
   - apt update && apt install --no-install-recommends -y ca-certificates
       cmake clang-format-6.0 doxygen g++ gcovr git graphviz lcov make
       python3-dev python3-pip python3-setuptools python3-wheel swig
   - python3 -m pip install coverxygen
   - git clone https://github.com/catchorg/Catch2.git && cd Catch2 &&
       cmake -Bbuild -H. -DBUILD_TESTING=OFF &&
       cmake --build build/ --target install && cd ..
  script:
   - mkdir -p build
   - cd build
   - cmake -G "Unix Makefiles" -DWITH_TESTS=ON ..
   - make -j 4
   - make doc
  artifacts:
    paths:
     - "build/"

.test_template_make: &test_definition_make
  stage: test
  before_script:
   - apt update && apt install --no-install-recommends -y cmake g++ python3
  script:
   - cd build
   - ctest
  artifacts:
    paths:
     - "build/"

build-ubuntu-18.04:
  image: ubuntu:18.04
  tags:
   - docker
   - linux
  <<: *build_definition_make

test-ubuntu-18.04:
  image: ubuntu:18.04
  tags:
   - docker
   - linux
  dependencies:
   - build-ubuntu-18.04
  <<: *test_definition_make

coverage:
  image: ubuntu:18.04
  tags:
   - docker
   - linux
  dependencies:
   - test-ubuntu-18.04
  stage: quality
  before_script:
   - apt update && apt install --no-install-recommends -y
       cmake gcovr git lcov make
  script:
   - cd build
   - gcovr -r .. --html-details > coverage.html
   - gcovr -r ..
  artifacts:
    paths:
     - "build/coverage.html"

cpp-format:
  image: ubuntu:18.04
  tags:
   - docker
   - linux
  stage: quality
  before_script:
   - apt update && apt install --no-install-recommends -y
       cmake clang-format-6.0 g++ git make
  script:
   - mkdir -p build
   - cd build
   - cmake  -G "Unix Makefiles" -DWITH_PYTHON=OFF -DWITH_DOXYGEN=OFF
       -DWITH_TESTS=OFF ..
   - make format
   - cd ..
   - git diff > build/format_check_revisionlist.txt
   - if [ `git diff | wc -l` -gt "0" ]; then false; fi
  artifacts:
    when: on_failure
    paths:
     - "build/format_check_revisionlist.txt"
  allow_failure: true

pages:
  image: ubuntu:18.04
  tags:
   - docker
   - linux
  stage: deploy
  dependencies:
   - build-ubuntu-18.04
   - coverage
  script:
   - mv build/html/ public/
   - mv build/coverage.html public/
  artifacts:
    paths:
     - "public/"
  only:
   - master
