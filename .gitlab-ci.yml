stages:
 - build
 - test
 - deploy
 - quality

.build_template_make: &build_definition_make
  stage: build
  script:
    - mkdir -p build
    - cd build
    - cmake -G "Unix Makefiles" ..
    - make -j 4
  artifacts:
    paths:
      - "build/"

build-debian:oldstable:
  image: cphtum/docker-bertha-debian:oldstable
  tags:
   - docker
   - linux
  <<: *build_definition_make

build-doc:
  image: cphtum/docker-bertha-debian:oldstable
  tags:
   - docker
   - linux
  stage: build
  script:
   - mkdir -p build
   - cd build
   - cmake -G "Unix Makefiles" ..
   - make doc
  artifacts:
    paths:
      - "build/"

pages:
  image: cphtum/docker-bertha-debian:oldstable
  tags:
   - docker
   - linux
  stage: deploy
  dependencies:
   - build-doc
  script:
   - mv build/html/ public/
  artifacts:
    paths:
      - "public/"
  only:
   - master

cpp-format:
  image: cphtum/docker-bertha-debian:oldstable
  tags:
   - docker
   - linux
  stage: quality
  dependencies:
   - build-debian:oldstable
  script:
   - cd build
   - make format
   - cd ..
   - git diff > build/format_check_revisionlist.txt &&
     modified=`git diff | wc -l` &&
     if [ "$modified" -gt "0" ]; then result=1; else result=0; fi &&
     exit $result
  artifacts:
    when: on_failure
    paths:
      - "build/format_check_revisionlist.txt"
  allow_failure: true
